{"version":3,"sources":["pages/novel/index.js"],"names":["Novel","list","this","props","columns","key","dataIndex","title","align","render","item","record","index","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","src","image_url","style","width","verticalAlign","alt","antd__WEBPACK_IMPORTED_MODULE_7__","marginRight","size","type","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","JSON","stringify","id","antd__WEBPACK_IMPORTED_MODULE_8__","rowKey","_id","dataSource","bordered","pagination","getNovelList","PureComponent","connect","state","novel","dispatch","actionCreators","withRouter"],"mappings":"iNAMMA,mLACK,IACAC,EAAQC,KAAKC,MAAbF,KACDG,EAAU,CACd,CACEC,IAAK,KACLC,UAAW,KACXC,MAAO,iBACPC,MAAO,UACN,CACDH,IAAK,QACLC,UAAW,QACXC,MAAO,2BACPC,MAAO,UACN,CACDH,IAAK,aACLC,UAAW,aACXC,MAAO,2BACPC,MAAO,UACN,CACDH,IAAK,YACLE,MAAO,eACPC,MAAO,SACPC,OAJC,SAIMC,EAAMC,EAAQC,GAKnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAOM,UAAWC,MALb,CACfC,MAAO,QACPC,cAAe,UAG8BC,IAAI,OAGpD,CACDhB,IAAK,SACLE,MAAO,eACPC,MAAO,SACPC,OAJC,SAIMC,EAAMC,EAAQC,GACnB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQJ,MAAO,CAACK,YAAa,QAASC,KAAK,QAAQC,KAAK,WACtDZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAI,8BAAgCC,KAAKC,UAAUlB,IAAzD,iBAEFE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQE,KAAK,SACXX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAI,gCAAkChB,EAAOmB,GAAK,UAAYnB,EAAOJ,OAA3E,qBAMZ,OAAOM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,OAAQ,SAAArB,GAAM,OAAIA,EAAOsB,KAAK7B,QAASA,EAAS8B,WAAYjC,EAAMkC,UAAQ,EAAEC,YAAY,gDAItGlC,KAAKC,MAAMkC,sBArDKC,iBAsELC,sBAbE,SAACC,GAAD,MAAY,CAC3BvC,KAAMuC,EAAMC,MAAMxC,KAClBG,QAASoC,EAAMC,MAAMrC,UAGH,SAACsC,GACnB,MAAO,CACLL,aADK,WAEHK,EAASC,IAAeN,mBAKfE,CAA+BK,YAAW5C","file":"static/js/10.df28ef8e.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Table} from 'antd';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {actionCreators} from './store';\r\n\r\nclass Novel extends PureComponent {\r\n  render() {\r\n    const {list} = this.props;\r\n    const columns = [\r\n      {\r\n        key: 'id',\r\n        dataIndex: 'id',\r\n        title: '小说id',\r\n        align: 'center'\r\n      }, {\r\n        key: 'title',\r\n        dataIndex: 'title',\r\n        title: '小说名称',\r\n        align: 'center'\r\n      }, {\r\n        key: 'page_title',\r\n        dataIndex: 'page_title',\r\n        title: '首章标题',\r\n        align: 'center'\r\n      }, {\r\n        key: 'image_url',\r\n        title: 'banner图',\r\n        align: 'center',\r\n        render(item, record, index) {\r\n          const imgStyle = {\r\n            width: '100px',\r\n            verticalAlign: 'middle'\r\n          };\r\n          return (\r\n            <img src={record.image_url} style={imgStyle} alt=\"\"/>\r\n          )\r\n        }\r\n      }, {\r\n        key: 'action',\r\n        title: '操作',\r\n        align: 'center',\r\n        render(item, record, index) {\r\n          return (\r\n            <div>\r\n              <Button style={{marginRight: '10px'}} size='small' type='primary'>\r\n                <Link to={'/build/novel/modify?record=' + JSON.stringify(record)}>修改</Link>\r\n              </Button>\r\n              <Button size='small'>\r\n                <Link to={'/build/novel/config/index?id=' + record.id + '&title=' + record.title}>配置</Link>\r\n              </Button>\r\n            </div>\r\n          )\r\n        }\r\n      }];\r\n    return <Table rowKey={record => record._id} columns={columns} dataSource={list} bordered  pagination={false} />\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getNovelList()\r\n  }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  list: state.novel.list,\r\n  columns: state.novel.columns\r\n});\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getNovelList() {\r\n      dispatch(actionCreators.getNovelList())\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(withRouter(Novel));"],"sourceRoot":""}