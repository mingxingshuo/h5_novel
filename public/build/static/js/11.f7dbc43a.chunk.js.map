{"version":3,"sources":["pages/novel/config/index.js"],"names":["Config","_this","this","_this$props","props","rules","chapterCount","columns","key","dataIndex","title","align","render","item","record","index","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_8__","size","type","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","pathname","query","react__WEBPACK_IMPORTED_MODULE_5__","style","float","marginRight","margin","onClick","history","goBack","antd__WEBPACK_IMPORTED_MODULE_9__","bordered","rowKey","_id","dataSource","pagination","decodeURI","location","search","id","split","setBookInfo","getBookRules","PureComponent","connect","state","book","novel","dispatch","actionCreators","withRouter"],"mappings":"gNAMMA,mLAEK,IAAAC,EAAAC,KAAAC,EACyBD,KAAKE,MAA7BC,EADDF,EACCE,MAAOC,EADRH,EACQG,aACTC,EAAU,CACd,CACEC,IAAK,QACLC,UAAW,QACXC,MAAO,eACPC,MAAO,UACN,CACDH,IAAK,cACLC,UAAW,cACXC,MAAO,2BACPC,MAAO,UACP,CACAH,IAAK,YACLC,UAAW,YACXC,MAAO,2BACPC,MAAO,UACP,CACAH,IAAK,SACLE,MAAO,SACPC,MAAO,SACPC,OAJA,SAIOC,EAAMC,EAAQC,GACnB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,KAAK,WACxBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAI,CAACC,SAAU,6BAA8BC,MAAOX,IAA1D,oBAMV,OACEE,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACEV,EAAAC,EAAAC,cAAA,QAAMS,MAAO,CAACC,MAAO,QAASC,YAAa,SAA3C,UAAuDvB,EAAvD,WACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQQ,MAAO,CAACG,OAAQ,iBAAkBT,KAAK,WAC7CL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAI,8BAAV,6BAEFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,QAAS,kBAAM9B,EAAKG,MAAM4B,QAAQC,WAA1C,kCACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAQ,SAAAtB,GAAM,OAAIA,EAAOuB,KAAK9B,QAASA,EAAS+B,WAAYjC,EAAQkC,YAAY,iDAMpG,IAAIzB,EAAS0B,UAAUtC,KAAKE,MAAMqC,SAASC,QACvCC,EAAK7B,EAAO8B,MAAM,KAAK,GAAGA,MAAM,KAAK,GACrClC,EAAQI,EAAO8B,MAAM,KAAK,GAC9B1C,KAAKE,MAAMyC,YAAYF,EAAIjC,GAC3BR,KAAKE,MAAM0C,aAAaH,UAlDPI,iBAsENC,sBAfE,SAACC,GAAD,MAAY,CAC3BC,KAAMD,EAAME,MAAMD,KAClB7C,MAAO4C,EAAME,MAAM9C,MACnBC,aAAc2C,EAAME,MAAM7C,eAGR,SAAC8C,GAAD,MAAe,CACjCP,YADiC,SACrBF,EAAIjC,GACd0C,EAASC,IAAeR,YAAYF,EAAIjC,KAE1CoC,aAJiC,SAIpBH,GACXS,EAASC,IAAeP,aAAaH,OAI1BK,CAA+BM,YAAWtD","file":"static/js/11.f7dbc43a.chunk.js","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Table, Button } from 'antd';\r\nimport {actionCreators} from \"../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Config extends PureComponent {\r\n\r\n  render() {\r\n    const { rules, chapterCount } = this.props;\r\n    const columns = [\r\n      {\r\n        key: 'price',\r\n        dataIndex: 'price',\r\n        title: '金额',\r\n        align: 'center'\r\n      }, {\r\n        key: 'start_index',\r\n        dataIndex: 'start_index',\r\n        title: '起始章节',\r\n        align: 'center'\r\n      },{\r\n        key: 'end_index',\r\n        dataIndex: 'end_index',\r\n        title: '结束章节',\r\n        align: 'center'\r\n      },{\r\n        key: 'action',\r\n        title: 'Action',\r\n        align: 'center',\r\n        render(item, record, index) {\r\n          return (\r\n            <Button size='small' type='primary'>\r\n              <Link to={{pathname: '/build/novel/config/update', query: record}}>修改</Link>\r\n            </Button>\r\n          )\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <Fragment>\r\n        <span style={{float: 'right', marginRight: '30px'}}>共 {chapterCount} 章</span>\r\n        <Button style={{margin: '0 30px 30px 0'}} type='primary'>\r\n          <Link to={'/build/novel/config/create'}>创建规则</Link>\r\n        </Button>\r\n        <Button onClick={() => this.props.history.goBack()}>返回上一级</Button>\r\n        <Table bordered rowKey={record => record._id} columns={columns} dataSource={rules}  pagination={false} />\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    let record = decodeURI(this.props.location.search);\r\n    let id = record.split('=')[1].split('&')[0];\r\n    let title = record.split('=')[2];\r\n    this.props.setBookInfo(id, title);\r\n    this.props.getBookRules(id);\r\n  }\r\n\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  book: state.novel.book,\r\n  rules: state.novel.rules,\r\n  chapterCount: state.novel.chapterCount\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  setBookInfo(id, title) {\r\n    dispatch(actionCreators.setBookInfo(id, title))\r\n  },\r\n  getBookRules(id) {\r\n    dispatch(actionCreators.getBookRules(id))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(withRouter(Config));"],"sourceRoot":""}